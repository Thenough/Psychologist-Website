@model SignUpViewModule

@{
    ViewData["Title"] = "SignUp";
}
<div class="row">
    <div class="col-md-6 offset-md-3">
        <h2>Kullanıcı Kayıt Formu</h2>

        @if (TempData["SuccessMessage"] != null)
        {
            <div class="alert alert-info" role="alert">
                @TempData["SuccessMessage"]
            </div> 
        }

        @if (!ViewData.ModelState.IsValid)
        {
            <div class="alert alert-danger">
                <ul>
                    @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
                    {
                        <li>@error.ErrorMessage</li>
                    }
                </ul>
            </div>
        }
        <div asp-validation-summary="ModelOnly" class="aslert alert-danger" role="alert"></div>
        <form asp-controller="Home" asp-action="SignUp" method="post">
            <div class="form-group row mb-3">
                <label for="UserName" class="col-md-4 col-form-label">@Html.DisplayNameFor(model => model.UserName)</label>
                <div class="col-md-8">
                    <input asp-for="UserName" class="form-control" />
                    <span asp-validation-for="UserName" class="text-danger"></span>
                </div>
            </div>

            <div class="form-group row mb-3">
                <label for="Email" class="col-md-4 col-form-label">@Html.DisplayNameFor(model => model.Email)</label>
                <div class="col-md-8">
                    <input asp-for="Email" type="email" class="form-control" />
                    <span asp-validation-for="Email" class="text-danger"></span>
                </div>
            </div>


            <div class="form-group row mb-3">
                <label for="PhoneNumber" class="col-md-4 col-form-label">@Html.DisplayNameFor(model => model.PhoneNumber)</label>
                <div class="col-md-8">
                    <input asp-for="PhoneNumber" class="form-control" />
                    <span asp-validation-for="PhoneNumber" class="text-danger"></span>
                </div>
            </div>

            <div class="form-group row mb-3">
                <label for="PassWord" class="col-md-4 col-form-label">@Html.DisplayNameFor(model => model.PassWord)</label>
                <div class="col-md-8">
                    <input asp-for="PassWord" type="password" class="form-control" />
                    <span asp-validation-for="PassWord" class="text-danger"></span>
                </div>
            </div>

            <div class="form-group row mb-3">
                <label for="PassWordConfirm" class="col-md-4 col-form-label">@Html.DisplayNameFor(model => model.PassWordConfirm)</label>
                <div class="col-md-8">
                    <input asp-for="PassWordConfirm" type="password" class="form-control" />
                    <span asp-validation-for="PassWordConfirm" class="text-danger"></span>
                </div>
            </div>

            <div class="form-group row mb-3">
                <div class="col-md-8 offset-md-4">
                    <button type="submit" class="btn btn-primary">Kayıt Ol</button>
                </div>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
